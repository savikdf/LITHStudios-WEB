@section Scripts{
    @*@Scripts.Render("~/bundles/knockout")
        @Scripts.Render("~/bundles/app")*@
}

<html>
<head>

</head>
<body style="max-width:100%;">
    <div style="display:inline-flex; width:100%; overflow:hidden; margin-bottom:10em; background-color: transparent;">
        <div id="moving-subtext" style="height:auto; background-color: transparent;">
            <h1 id="moving-subtext-01">
                Design
                <span style="font-weight:bold; color:#8df7f7;">&amp;</span>
            </h1>
            <h1 id="moving-subtext-02">
                Development
            </h1>
            <h2 id="moving-subtext-03" style="border-bottom:0.05em solid #8df7f7;">
                Done Right
            </h2>

        </div>
        <img id="moving-subtext-image" src="~/Content/Images/hero-img-home-sub.png" />
    </div>
    <script>
        var SubImageHeight = 1150;
        var SubImage = $("#moving-subtext-image");

        $(SubImage).css("top", ($(document).scrollTop() / 7.5) + SubImageHeight);


        if (!isMobile) {
            $(SubImage).css("top", SubImageHeight);
            $(SubImage).css("height", ($(window).height() * 0.95));



            $(window).on("scroll resize", function () {

                //Subtext
                var leftOffsetAmount1 = Math.min(
                    ($(window).scrollTop() / 3) - 290,
                    40
                );
                var leftOffsetAmount2 = Math.min(
                    ($(window).scrollTop() / 3) - 315,
                    40
                );
                var leftOffsetAmount3 = Math.min(
                    ($(window).scrollTop() / 3) - 330,
                    40
                );

                $("#moving-subtext-01").css("margin-left", leftOffsetAmount1 + "px");
                $("#moving-subtext-02").css("margin-left", leftOffsetAmount2 + "px");
                $("#moving-subtext-03").css("margin-left", leftOffsetAmount3 + "px");


                //Sub-image
                $(SubImage).css("opacity", ($(document).scrollTop() / 600) - 1);


            });
        } else {

            $("#moving-subtext").css("padding-left", 20 + "px");
            $("#moving-subtext-image").css("opacity", 0.5);

        }
    </script>

    <!--HOME-->
    <div id="section-home" class="section">
        <div class="section-header container">
            <span>What We Can Do For You</span>
        </div>
        <div id="home-icons" class="container">
            <ul>
                <li id="info-design">
                    <button id="icon-design" class="icon-button" style="margin-left: auto; margin-right: auto;"><i class="fa fa-lightbulb-o" aria-hidden="true"></i></button>
                    <h1>Design</h1>
                    <div class="service-description" id="desc-design">
                        Design is the most crutial part of any project. We understand this, and are ready to give you the design spearhead you need to build your business. <br />
                        At LITH we like to use output oriented design principles, meaing that you get the most optimized and refined user impact, experience and retention.
                    </div>
                </li>
                <li id="info-code">
                    <button id="icon-code" class="icon-button" style="margin-left: auto; margin-right: auto;"><i class="fa fa-code" aria-hidden="true"></i></button>
                    <h1>Development</h1>
                    <div class="service-description" id="desc-code">
                        With over 8 years of experience developing on industry standard application frameworks and for fortune 500 companies, we can give you the technological edge
                        you need. <br />
                        If it's a complex application, a website or an inhouse tool, we have got you covered.
                    </div>
                </li>
                <li id="info-art">
                    <button id="icon-art" class="icon-button" style="margin-left: auto; margin-right: auto;"><i class="fa fa-pencil" aria-hidden="true"></i></button>
                    <h1>Graphics</h1>
                    <div class="service-description" id="desc-art">
                        Using the latest graphics software, we will take your vision from the drawing board though to an amazing final product. <br />
                        Whether you need branding, logos, letterheads, conceptual art, GIFs, promotional visuals or anything in between, we can provide.
                    </div>
                </li>
                <li id="info-games">
                    <button id="icon-games" class="icon-button" style="margin-left: auto; margin-right: auto;"><i class="fa fa-gamepad" aria-hidden="true"></i></button>
                    <h1>Games</h1>
                    <div class="service-description" id="desc-games">
                        Gameification and 'Serious Games' are becoming a well known staple in engaging audiences. If you have a system that isn't yielding the results you hoped for,
                        game design principles will be your saving grace.       <br />
                        We can also turn any idea you have into a mobile app or PC game! The possibilities are endless with our experience in gaming development.
                    </div>
                </li>

            </ul>

        </div>
    </div>
    <script>
        if (isMobile) {
            HideDescriptions();
        }

        $(".icon-button").on("click touch", function () {
            //if not active
            if (!$(this).hasClass("active-home-icon-button")) {
                //remove active button
                $(".icon-button").removeClass("active-home-icon-button");
                //make this one active
                $(this).addClass("active-home-icon-button");
                if (isMobile) {
                    //if its on the mobile hide all the other descriptions except this one
                    HideDescriptions($(this).attr('id'));
                    //scroll to the newly opened text
                    $('html, body').animate({
                        scrollTop: ($(this).offset().top - 50)
                    }, 800);
                }

            } else if (isMobile) {
                //remove all active buttons
                $(".icon-button").removeClass("active-home-icon-button");
                //hide all descriptions
                HideDescriptions();
            }
        }
            //, function () {
            //$(".icon-button").removeClass("active-home-icon-button");
            //if (isMobile)
            //    HideDescriptions();
            //}
        );


        function HideDescriptions(enablelWhatID) {
            $("#desc-design").removeClass("active-description");
            $("#desc-code").removeClass("active-description");
            $("#desc-art").removeClass("active-description");
            $("#desc-games").removeClass("active-description");

            $("#desc-design").css("display", "none");
            $("#desc-code").css("display", "none");
            $("#desc-art").css("display", "none");
            $("#desc-games").css("display", "none");


            if (enablelWhatID == "icon-design") {
                $("#desc-design").addClass("active-description");
                $("#desc-design").css("display", "inherit");
            }
            if (enablelWhatID == "icon-code") {
                $("#desc-code").addClass("active-description");
                $("#desc-code").css("display", "inherit");
            }
            if (enablelWhatID == "icon-art") {
                $("#desc-art").addClass("active-description");
                $("#desc-art").css("display", "inherit");
            }
            if (enablelWhatID == "icon-games") {
                $("#desc-games").addClass("active-description");
                $("#desc-games").css("display", "inherit");
            }
        }


    </script>


    <!--ABOUT-->
    <div id="section-about" class="section">
        <div class="section-header container">
            <span>About Us</span>
        </div>
        <div class="about-content-container container">
            <div class="about-content">
                <h1>The Studio</h1>
                <p>
                    LITH Studios was founded with the core idea of being different; A studio that was cut-off entirely from the monopoly
                    of the corporate world; a studio that actually cared about their clients; A studio that would change the way technology evolves.<br /> <br />
                    What began as energy drink fueled game developers trying to justify making games for a living, has now evolved into coffee fueled software developers
                    trying to justify making apps for a living. Nothing has changed from our beginning really, just our knowledge and passion.
                </p>
                <h1>The Devs</h1>
                <p>
                    Savik and Eugene have been a team ever since they crossed paths. With development experience that ranges from fortune 500 companies to the depths of student projects,
                    we've seen it all. We were both Interdisiplinary Game Deveolopers to start with, but transitioned into web apps and software when we realized that's where our
                    passion was. <br /><br />
                    We're both young, full of life, and ready to sit behind the keyboard 24-7 until your project hits perfection.
                </p>

            </div>
            <div class="about-content" id="img-anim-cont">
                <img class=".about-content-img-anim" src="~/Content/Images/TeamMembers/sav.jpg" alt="Savik" longdesc="Savik, one of the founders!" />
                <img class=".about-content-img-anim" src="~/Content/Images/TeamMembers/eug.jpg" alt="Eugene" longdesc="Eugene, one of the founders!" />
            </div>
        </div>
    </div>
    <script>
        if (!isMobile) {
            $(window).on("scroll resize", function () {
                //About bubbles
                var fadeAmount = math.min(1,
                    (($(document).scrollTop() - $("#img-anim-cont").offset().top()) / 5)
                );

                $("#img-anim-cont").css("opacity", fadeAmount);
            });
        }
    </script>

    <!--END ABOUT-->
    <!--CONTACT-->
    <div id="section-contact" class="section">
        <canvas id="canvas"></canvas>
        <div class="section-header container">
            <span>Contact</span>
        </div>
        <form action="https://formspree.io/savik@lithstudios.com" method="POST">
            <div class="container contact-container">

                <fieldset class="contact-container-div">
                    <div class="mat-div">
                        <label for="name" class="mat-label"><span style="color:red">*</span>Name</label>
                        <input required type="text" class="mat-input" id="name" name="name">
                    </div>

                    <div class="mat-div">
                        <label for="bus-name" class="mat-label">Business Name</label>
                        <input type="text" class="mat-input" id="bus-name" name="business-name">
                    </div>

                    <div class="mat-div">
                        <label required for="email" class="mat-label"><span style="color:red">*</span>Email</label>
                        <input required type="email" class="mat-input" id="email" name="e-mail">
                    </div>

                    <div class="mat-div">
                        <label for="phone" class="mat-label">Phone</label>
                        <input type="tel" class="mat-input" id="phone" name="phone-num">
                    </div>

                    <div class="mat-div">
                        <label for="budget" class="mat-label">Whats Your Budget?</label>
                        <input type="tel" class="mat-input" id="budget" name="budget-num">
                    </div>

                    @*<p style="font-weight:bold;"><span style="color:red">*</span>What's your budget looking like?</p>
                        <div class="mat-div">
                            <select required name="Budget" id="budget" class="mat-input budget-select">
                                <option value="less-than-500">&lt; $500</option>
                                <option value="500-1000">$500 - $1000</option>
                                <option value="1000-1500">$1000 - $1500</option>
                                <option value="1500-2000">$1500 - $2000</option>
                                <option value="greater-than-2000">&gt;$2000</option>
                                <option value="n-a">N/A</option>
                            </select>
                        </div>*@

                </fieldset>
                <fieldset class="contact-container-div">
                    <div class="mat-div">
                        <label for="message" class="mat-label"><span style="color:red">*</span>Your Message</label>
                        <textarea type="text" class="mat-input" id="message" cols="30" rows="9" name="message"></textarea>
                    </div>

                    <input id="submitButton" type="submit" value="Send">
                </fieldset>
            </div>


        </form>


    </div>
    <script>
        $(".mat-input").focus(function () {
            $(this).parent().addClass("is-active is-completed");
        });

        $(".mat-input").focusout(function () {
            if ($(this).val() === "")
                $(this).parent().removeClass("is-completed");
            $(this).parent().removeClass("is-active");
        })
    </script>
    <!--END CONTACT-->

    <script>
        if (isMobile) {
            $("#canvas").css("display", "none");
        }
    </script>


    <script>
        // RequestAnimFrame: a browser API for getting smooth animations
        window.requestAnimFrame = (function () {
            return window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (callback) {
                    window.setTimeout(callback, 1000 / 60);
                };
        })();

        // Initializing the canvas
        // I am using native JS here, but you can use jQuery,
        // Mootools or anything you want
        var canvas = document.getElementById("canvas");

        // Initialize the context of the canvas
        var ctx = canvas.getContext("2d");

        // Set the canvas width and height to occupy full window
        var W = window.innerWidth, H = window.innerHeight;
        canvas.width = W;
        canvas.height = H;

        // Some variables for later use
        var particleCount = 150,
            particles = [],
            minDist = 70,
            dist;

        var vDamp = 1.5;
        // Function to paint the canvas black
        function paintCanvas() {
            // Set the fill color to black
            ctx.fillStyle = "rgba(0,0,0,1)";

            // This will create a rectangle of white color from the
            // top left (0,0) to the bottom right corner (W,H)
            ctx.fillRect(0, 0, W, H);
        }

        // Now the idea is to create some particles that will attract
        // each other when they come close. We will set a minimum
        // distance for it and also draw a line when they come
        // close to each other.

        // The attraction can be done by increasing their velocity as
        // they reach closer to each other

        // Let's make a function that will act as a class for
        // our particles.

        function Particle() {
            // Position them randomly on the canvas
            // Math.random() generates a random value between 0
            // and 1 so we will need to multiply that with the
            // canvas width and height.
            this.x = Math.random() * W;
            this.y = Math.random() * H;


            // We would also need some velocity for the particles
            // so that they can move freely across the space
            this.vx = -1 + Math.random() * 2;
            this.vy = -1 + Math.random() * 2;

            // Now the radius of the particles. I want all of
            // them to be equal in size so no Math.random() here..
            this.radius = 2;

            // This is the method that will draw the Particle on the
            // canvas. It is using the basic fillStyle, then we start
            // the path and after we use the `arc` function to
            // draw our circle. The `arc` function accepts four
            // parameters in which first two depicts the position
            // of the center point of our arc as x and y coordinates.
            // The third value is for radius, then start angle,
            // end angle and finally a boolean value which decides
            // whether the arc is to be drawn in counter clockwise or
            // in a clockwise direction. False for clockwise.
            this.draw = function () {
                ctx.fillStyle = "orange";
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);

                // Fill the color to the arc that we just created
                ctx.fill();
            }
        }

        // Time to push the particles into an array
        for (var i = 0; i < particleCount; i++) {
            particles.push(new Particle());
        }

        // Function to draw everything on the canvas that we'll use when
        // animating the whole scene.
        function draw() {

            // Call the paintCanvas function here so that our canvas
            // will get re-painted in each next frame
            paintCanvas();

            // Call the function that will draw the balls using a loop
            for (var i = 0; i < particles.length; i++) {
                p = particles[i];
                p.draw();
            }

            //Finally call the update function
            update();
        }

        // Give every particle some life
        function update() {

            // In this function, we are first going to update every
            // particle's position according to their velocities
            for (var i = 0; i < particles.length; i++) {
                p = particles[i];

                // Change the velocities
                p.x += p.vx / vDamp;
                p.y += p.vy / vDamp;

                // We don't want to make the particles leave the
                // area, so just change their position when they
                // touch the walls of the window
                if (p.x + p.radius > W)
                    p.x = p.radius;

                else if (p.x - p.radius < 0) {
                    p.x = W - p.radius;
                }

                if (p.y + p.radius > H)
                    p.y = p.radius;

                else if (p.y - p.radius < 0) {
                    p.y = H - p.radius;
                }

                // Now we need to make them attract each other
                // so first, we'll check the distance between
                // them and compare it to the minDist we have
                // already set

                // We will need another loop so that each
                // particle can be compared to every other particle
                // except itself
                for (var j = i + 1; j < particles.length; j++) {
                    p2 = particles[j];
                    distance(p, p2);
                }

            }
        }

        // Distance calculator between two particles
        function distance(p1, p2) {
            var dist,
                dx = p1.x - p2.x,
                dy = p1.y - p2.y;

            dist = Math.sqrt(dx * dx + dy * dy);

            // Draw the line when distance is smaller
            // then the minimum distance
            if (dist <= minDist) {

                // Draw the line
                ctx.beginPath();
                ctx.strokeStyle = "rgba(255,159,0," + (1.2 - dist / minDist) + ")";
                ctx.moveTo(p1.x, p1.y);
                ctx.lineTo(p2.x, p2.y);
                ctx.stroke();
                ctx.closePath();

                // Some acceleration for the partcles
                // depending upon their distance
                var ax = dx / 2000,
                    ay = dy / 2000;

                // Apply the acceleration on the particles
                p1.vx -= ax;
                p1.vy -= ay;

                p2.vx += ax;
                p2.vy += ay;
            }
        }

        // Start the main animation loop using requestAnimFrame
        function animloop() {
            draw();
            requestAnimFrame(animloop);
        }

        animloop();
    </script>

</body>

</html>
